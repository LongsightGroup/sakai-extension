<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                      http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.sakaiproject.kaltura</groupId>
    <artifactId>kaltura</artifactId>
    <version>0.1</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <name>Sakai Kaltura Job</name>
  <groupId>org.sakaiproject.kaltura</groupId>
  <artifactId>kaltura-job</artifactId>
  <version>0.1</version>
  <organization>
    <name>Sakai Project</name>
    <url>http://sakaiproject.org/</url>
  </organization>
  <inceptionYear>2014</inceptionYear>
  <packaging>jar</packaging>

  <properties>
    <commons.lang3.version>3.3.2</commons.lang3.version>
    <gson.version>2.2.4</gson.version>
  </properties>

  <dependencies>
    <!-- we are running a webapp in a servlet container so we need the servlet API -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
    <!-- We need this special package to run the jsps in Sakai -->
    <dependency>
      <groupId>org.sakaiproject</groupId>
      <artifactId>sakai-jsp-adapter</artifactId>
      <version>0.10-K1</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.sakaiproject</groupId>
          <artifactId>sakai-kernel-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Sakai dependencies -->
    <dependency>
      <groupId>org.sakaiproject.kernel</groupId>
      <artifactId>sakai-kernel-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.kernel</groupId>
      <artifactId>sakai-component-manager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.kernel</groupId>
      <artifactId>sakai-kernel-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.entitybroker</groupId>
      <artifactId>entitybroker-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.entitybroker</groupId>
      <artifactId>entitybroker-utils</artifactId>
    </dependency>
    <dependency>
    <groupId>org.sakaiproject.basiclti</groupId>
    <artifactId>basiclti-common</artifactId>
    <version>10-SNAPSHOT</version>
    </dependency>
    <dependency>
    <groupId>org.sakaiproject.basiclti</groupId>
    <artifactId>basiclti-api</artifactId>
    <version>10-SNAPSHOT</version>
    </dependency>
    <dependency>
    <groupId>org.sakaiproject.scheduler</groupId>
    <artifactId>scheduler-api</artifactId>
    </dependency>
    <dependency>
    <groupId>org.sakaiproject.scheduler</groupId>
    <artifactId>scheduler-component-shared</artifactId>
    </dependency>

     <!-- generic DAO -->
    <dependency>
      <groupId>org.sakaiproject</groupId>
      <artifactId>generic-dao</artifactId>
      <version>${generic-dao.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>
    <!-- shared external dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- utility libs -->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang3.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.3</version>
    </dependency>
    <!-- JSP and standard tag libraries -->
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
      <scope>runtime</scope>
    </dependency>
    <!-- Sakai uses apache commons logging -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <!-- testing dependencies -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- JSON dependencies -->
    <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
    </dependency>
    
    <dependency>
        <groupId>org.opensymphony.quartz</groupId>
        <artifactId>quartz</artifactId>
        <version>1.6.6</version>
    </dependency>


  </dependencies>

  <build>
    <!-- configure the build to use the standard maven structure -->
    <sourceDirectory>src/main/java</sourceDirectory>
    <resources>
      <resource>
        <directory>${basedir}/src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <!-- configure the war plugin to correctly use the standard maven structure -->
      <plugin>
        <!-- Used to replace the headers of files with proper licenses - 
        http://code.google.com/p/maven-license-plugin - 
        Run mvn license:format to fix up licenses on all files in the project -->
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <version>1.9.0</version>
        <configuration>
          <strictCheck>true</strictCheck>
          <header>${basedir}/LICENSE_HEADER</header>
          <properties>
            <name>${project.name}</name>
            <year>${project.inceptionYear}</year>
            <holder>Sakaiproject</holder>
          </properties>
          <excludes>
            <exclude>target/**</exclude>
            <exclude>m2-target/**</exclude>
            <exclude>.idea/**</exclude>
            <exclude>**/*.properties</exclude>
            <exclude>**/*.txt</exclude>
            <exclude>**/*.jsp</exclude>
            <exclude>**/js/**</exclude>
            <exclude>**/css/**</exclude>
            <exclude>**/*.xml</exclude>
            <exclude>**/*.sql</exclude>
            <exclude>LICENSE*</exclude>
            <exclude>bin/**</exclude>
            <exclude>*.sql</exclude>
            <exclude>*.md</exclude>
            <exclude>.gitignore</exclude>
          </excludes>
          <mapping>
            <tag>DYNASCRIPT_STYLE</tag>
          </mapping>
          <encoding>UTF-8</encoding>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <!-- sets the name of the war file and thus the webapp URL -->
  </build>

  <developers>
    <developer>
      <id>rlong@unicon.net</id>
      <name>Robert E. Long</name>
      <email>rlong@unicon.net</email>
      <url>http://www.linkedin.com/in/relong</url>
      <roles>
        <role>Engineer</role>
      </roles>
      <timezone>-7</timezone>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>ECL 2.0</name>
      <distribution>repo</distribution>
      <url>http://www.osedu.org/licenses/ECL-2.0/</url>
    </license>
  </licenses>

</project>
